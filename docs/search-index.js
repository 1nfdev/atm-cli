var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","try_from","borrow","borrow_mut","try_into","type_id","typeid","BatchedMIDIArchive","BatchedMIDIArchiveState"];

searchIndex["atm"]={"doc":"`atm-cli` is a command line tool for generating and…","i":[[0,"utils","atm",E,N,N],[3,R[7],"atm::utils","Container for tar archive of MIDI files",N,N],[12,"partition_depth",E,"Number of partitions",0,N],[12,"max_files",E,"Maximum number of files per partition",0,N],[12,"partition_size",E,"Number of MIDI notes per partition",0,N],[12,"batch_size",E,"Number of MIDI files per batch",0,N],[12,"state",E,"Whether archive is `Open` or `Closed`",0,N],[4,R[8],E,"State of a BatchedMIDIArchive",N,N],[13,"Open",E,E,1,N],[13,"Closed",E,E,1,N],[5,"gen_partition_size",E,"Calculate number of MIDI notes per partition.",N,[[["i32"],["f32"]],["u32"]]],[5,"gen_path",E,"Generate a path representing the partition for the given…",N,[[["u32"],["str"]],["string"]]],[5,"gen_sequences",E,"Generate all permutations (with replacement) of given…",N,[[["u32"]],[["iter",["midinote"]],["multiproduct",["iter"]]]]],[11,"new",E,"Create new `BatchedMIDIArchive`",0,[[["u32"],["str"],["f32"]],["batchedmidiarchive"]]],[11,"push",E,"Add a MIDI file to the archive",0,[[["self"],["midifile"]],[R[0]]]],[11,"finish",E,"Flush current batch to the tar archive and set the state…",0,[[["self"]],[R[0]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,R[2],E,E,0,[[["self"]],[T]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[],[R[0]]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,R[2],E,E,1,[[["self"]],[T]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[],[R[0]]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"eq",E,E,1,[[["self"],["batchedmidiarchivestate"]],["bool"]]]],"p":[[3,R[7]],[4,R[8]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);